trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnection: 'DevOpsTraining'
  azureResourceGroup: 'rg-devopsacademyjan2025-west-europe'
  azureStorageAccount: 'reactappstoragedoacademy'
  buildDir: 'build'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - checkout: self
      displayName: 'Checkout main branch'

    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/$(buildDir)'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy build files to artifact staging directory'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'react-app-pkg'
        publishLocation: 'Container'
      displayName: 'Publish build artifacts'  
        
- stage: Deploy
  jobs:
  - job: Deploy
    steps:
    - download: current
      artifact: react-app-pkg
      displayName: 'Download build artifacts'

    - script: |
        echo $(System.DefaultWorkingDirectory)
        mkdir -p $(System.DefaultWorkingDirectory)/react-app-pkg
        echo $(Pipeline.Workspace)
        cp -r $(Pipeline.Workspace)/react-app-pkg/* $(System.DefaultWorkingDirectory)/react-app-pkg/
      displayName: 'Copy build artifacts to working directory'  

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        backendServiceArm: '$(azureServiceConnection)'
        backendAzureRmResourceGroupName: '$(azureResourceGroup)'
        backendAzureRmStorageAccountName: '$(azureStorageAccount)'
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: 'terraform.tfstate'
      displayName: 'Terraform Init'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        environmentServiceNameAzureRM: '$(azureServiceConnection)'
      displayName: 'Terraform Plan'

    - task: TerraformTaskV4@4
      inputs:
        provider: 'azurerm'
        command: 'apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        environmentServiceNameAzureRM: '$(azureServiceConnection)'
        commandOptions: '-auto-approve'
      displayName: 'Terraform Apply'

    # - task: AzureCLI@2
    #   inputs:
    #     azureSubscription: '$(azureServiceConnection)'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: |
    #       pwd
    #       ls -ltr
    #       az storage blob upload-batch -d '$web' -s '$(Pipeline.Workspace)/react-app-pkg/$(buildDir)' --account-name $(azureStorageAccount)
    #   displayName: 'Upload React app to Azure Storage'
